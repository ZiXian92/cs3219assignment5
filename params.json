{
  "name": "Git Guard",
  "tagline": "",
  "body": "# CS3219 Assignment 5 Git Guard\r\nAnalyze contributions on any public repository\r\n\r\n## Development System Requirements\r\n- NodeJS with `mocha`, `typescript`, `typings` and `rimraf` installed globally OR  \r\n- Docker and Docker-Compose\r\n\r\n## Directory Structure\r\n```\r\nroot  \r\n|_ dataentities // All data definition classes and interfaces here\r\n|_ datalogic // All data manipulation/computation logic components here\r\n|_ tests // All unit tests here\r\n|_ server // Server-side code here  \r\n   |_ api // All API endpoint handlers here  \r\n   |_ auth // Authentication-related code here\r\n|_ src  // Angular2 and other front-end code here\r\n|_ config // Webpack configuration files here  \r\n|_ misc  // Miscellaneous helper code here\r\n```\r\n\r\n## Local Setup\r\n1. Clone the repository.\r\n2. Change directory to project root.\r\n3. Run `npm install`.\r\n4> Run `typings install`.\r\n\r\n## Docker Setup\r\n1. Clone the repository.\r\n2. Change directory to project root and run `docker-compose up -d --build`.\r\n3. Enter the container with `docker-compose exec app bash` to run any Typescript compilation or Mocha tests(`npm test`).\r\n4. Run `npm install`.\r\n5. Run `typings install`.\r\n\r\n## Workflow\r\n1. Work on a branch that is not `master` or `develop` to avoid polluting them with conflicts or broken code.\r\n2. Keep your branch up-to-date by running `git fetch origin`, `git rebase origin/develop`.\r\n3. After pulling from upstream, run `npm install && typings install` in your chosen setup.\r\n4. Create pull request to `develop` when done. Merge only happens after passing CI.\r\n\r\n## Testing Single Unit Test File\r\n1. In the NodeJS environment(local or Docker), run `tsc`, followed by `mocha compiled/tests/<compiled_test_file_path>`.\r\n\r\n## Continuous Integration\r\nCI is done using free account on Shippable. CI tests are triggered only during pull requests. Log in to Shippable and select this project to view build results on console.  \r\n\r\n## FAQs\r\n1. **Typescript compiler doesn't recognize a NodeJS module.**  \r\nProbably it requires type definition for that module. Google around for module `@types/<module_name>`. If it exists, run `npm install --save-dev @types/<module_name>`. Otherwise, Google around(not sure of any standard way to resolve this).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}